---
apiVersion: v1
kind: Service
metadata:
  name: prosody
spec:
  selector:
    app: prosody
  ports:
  - name: "port-5222"
    port: 5222
    targetPort: 5222
  - name: "port-5269"
    port: 5269
    targetPort: 5269
  - name: "port-5280"
    port: 5280
    targetPort: 5280
  - name: "port-5347"
    port: 5347
    targetPort: 5347
  type: ClusterIP

---
#apiVersion: v1
#kind: Service
#metadata:
#  name: prosody
#  annotations:
#    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
#    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
#spec:
#  selector:
#    app: prosody
#  ports:
#    - port: 5222
#      targetPort: 5222
#      name: "port-5222"
#    - port: 5269
#      targetPort: 5269
#      name: "port-5269"
#    - port: 5280
#      targetPort: 5280
#      name: "port-5280"
#    - port: 5347
#      targetPort: 5347
#      name: "port-5347"
#  type: LoadBalancer


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prosody-config-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prosody-plugins-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prosody
  labels:
    app: prosody
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prosody
  template:
    metadata:
      labels:
        app: prosody
    spec:
      volumes:
      - name: prosody-config
        persistentVolumeClaim:
          claimName: prosody-config-pvc
      - name: prosody-plugins
        persistentVolumeClaim:
          claimName: prosody-plugins-pvc
      containers:
      - name: prosody
        image: "${JITSI_REPO}/prosody"
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /config
          name: prosody-config
        - mountPath: /prosody-plugins-custom
          name: prosody-plugins
        envFrom:
        - configMapRef:
            name: jitsi-config
#        readinessProbe:
#          httpGet:
#            path: /http-bind
#            port: 5280
#          initialDelaySeconds: 5
#          periodSeconds: 3
#          timeoutSeconds: 60
#        livenessProbe:
#          httpGet:
#            path: /http-bind
#            port: 5280
#          initialDelaySeconds: 10
#          periodSeconds: 3
        ports:
        # Activated service 'c2s' on 5222
        - containerPort: 5222
        # Activated service 's2s' on 5269
        - containerPort: 5269
        # Activated service 'http' on 5280
        - containerPort: 5280
        # Activated service 'component' on 5347
        - containerPort: 5347
      restartPolicy: Always

