#
# This ConfigMap is produced out of env vars file
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: jitsi-config
data:
#
# Basic configuration options
#

# Directory where all configuration will be stored.
  CONFIG: "~/.jitsi-meet-cfg"

# Exposed HTTP port.
  HTTP_PORT: "80"

# Exposed HTTPS port.
  HTTPS_PORT: "443"

# System time zone.
  TZ: "Europe/Amsterdam"

# Public URL for the web service.
  PUBLIC_URL: "https://web.jitsi.sunsingerus.com"

# IP address of the Docker host. See the "Running on a LAN environment" section
# in the README.
  DOCKER_HOST_ADDRESS: ""


#
# Let's Encrypt configuration
#

# Enable Let's Encrypt certificate generation.
  ENABLE_LETSENCRYPT: ""

# Domain for which to generate the certificate.
  LETSENCRYPT_DOMAIN: ""

# E-Mail for receiving important account notifications (mandatory).
  LETSENCRYPT_EMAIL: ""


#
# Etherpad integration (for document sharing)
#

# Set etherpad-lite URL (uncomment to enable).
  ETHERPAD_URL_BASE: ""


#
# Basic Jigasi configuration options (needed for SIP gateway support)
#

# SIP URI for incoming / outgoing calls.
  JIGASI_SIP_URI: ""

# Password for the specified SIP account as a clear text
  JIGASI_SIP_PASSWORD: ""

# SIP server (use the SIP account domain if in doubt).
  JIGASI_SIP_SERVER: ""

# SIP server port
  JIGASI_SIP_PORT: ""

# SIP server transport
  JIGASI_SIP_TRANSPORT: ""

#
# Authentication configuration (see README for details)
#

# Enable authentication.
  ENABLE_AUTH: ""

# Enable guest access.
  ENABLE_GUESTS: ""

# Start a conference with video muted
  START_WITH_VIDEO_MUTED: ""

# Select authentication type: internal, jwt or ldap
  AUTH_TYPE: ""

# JWT auuthentication
#

# Application identifier.
  JWT_APP_ID: ""

# Application secret known only to your token.
  JWT_APP_SECRET: ""

# (Optional) Set asap_accepted_issuers as a comma separated list.
  JWT_ACCEPTED_ISSUERS: ""

# (Optional) Set asap_accepted_audiences as a comma separated list.
  JWT_ACCEPTED_AUDIENCES: ""


# LDAP authentication (for more information see the Cyrus SASL saslauthd.conf man page)
#

# LDAP url for connection.
  LDAP_URL: ""

# LDAP base DN. Can be empty
  LDAP_BASE: ""

# LDAP user DN. Do not specify this parameter for the anonymous bind.
  LDAP_BINDDN: ""

# LDAP user password. Do not specify this parameter for the anonymous bind.
  LDAP_BINDPW: ""

# LDAP filter. Tokens example:
# %1-9 - if the input key is user@mail.domain.com, then %1 is com, %2 is domain and %3 is mail.
# %s - %s is replaced by the complete service string.
# %r - %r is replaced by the complete realm string.
  LDAP_FILTER: ""

# LDAP authentication method
  LDAP_AUTH_METHOD: ""

# LDAP version
  LDAP_VERSION: ""

# LDAP TLS using
  LDAP_USE_TLS: ""

# List of SSL/TLS ciphers to allow.
  LDAP_TLS_CIPHERS: ""

# Require and verify server certificate
  LDAP_TLS_CHECK_PEER: ""

# Path to CA cert file. Used when server sertificate verify is enabled.
  LDAP_TLS_CACERT_FILE: ""

# Path to CA certs directory. Used when server sertificate verify is enabled.
  LDAP_TLS_CACERT_DIR: ""


#
# Advanced configuration options (you generally don't need to change these)
#

# Internal XMPP domain.
  XMPP_DOMAIN: "web.jitsi.sunsingerus.com"

# Internal XMPP server
  XMPP_SERVER: "prosody"

  XMPP_SERVER_ADDRESS: ""

# Internal XMPP server URL
  XMPP_BOSH_URL_BASE: "http://prosody:5280"

# Internal XMPP domain for authenticated services.
  XMPP_AUTH_DOMAIN: "auth.web.jitsi.sunsingerus.com"

# XMPP domain for the MUC.
  XMPP_MUC_DOMAIN: "muc.web.jitsi.sunsingerus.com"

# XMPP domain for the internal MUC used for jibri, jigasi and jvb pools.
  XMPP_INTERNAL_MUC_DOMAIN: "internal-muc.web.jitsi.sunsingerus.com"

# XMPP domain for unauthenticated users.
  XMPP_GUEST_DOMAIN: "guest.web.jitsi.sunsingerus.com"

# Custom Prosody modules for XMPP_DOMAIN (comma separated)
  XMPP_MODULES: ""

# Custom Prosody modules for MUC component (comma separated)
  XMPP_MUC_MODULES: ""

# Custom Prosody modules for internal MUC component (comma separated)
  XMPP_INTERNAL_MUC_MODULES: ""

# MUC for the JVB pool.
  JVB_BREWERY_MUC: "jvbbrewery"

# XMPP user for JVB client connections.
  JVB_AUTH_USER: "jvb"

# XMPP password for JVB client connections.
  JVB_AUTH_PASSWORD: "passw0rd"

# STUN servers used to discover the server's public IP.
#JVB_STUN_SERVERS=stun.l.google.com:19302,stun1.l.google.com:19302,stun2.l.google.com:19302
  JVB_STUN_SERVERS: "coturn.sunsingerus.com:30500"

# Media port for the Jitsi Videobridge
  JVB_PORT: "30000"

# TCP Fallback for Jitsi Videobridge for when UDP isn't available
  JVB_TCP_HARVESTER_DISABLED: "false"
  JVB_TCP_PORT: "30443"

# A comma separated list of APIs to enable when the JVB is started. The default is none.
# See https://github.com/jitsi/jitsi-videobridge/blob/master/doc/rest.md for more information
  JVB_ENABLE_APIS: ""

# XMPP component password for Jicofo.
  JICOFO_COMPONENT_SECRET: "s3cr37"

# XMPP user for Jicofo client connections. NOTE: this option doesn't currently work due to a bug.
  JICOFO_AUTH_USER: "focus"

# XMPP password for Jicofo client connections.
  JICOFO_AUTH_PASSWORD: "passw0rd"

# XMPP user for Jigasi MUC client connections.
  JIGASI_XMPP_USER: "jigasi"

# XMPP password for Jigasi MUC client connections.
  JIGASI_XMPP_PASSWORD: "passw0rd"

# MUC name for the Jigasi pool.
  JIGASI_BREWERY_MUC: "jigasibrewery"

# Minimum port for media used by Jigasi.
  JIGASI_PORT_MIN: "20000"

# Maximum port for media used by Jigasi.
  JIGASI_PORT_MAX: "20050"

# Enable SDES srtp
  JIGASI_ENABLE_SDES_SRTP: ""

# Keepalive method
  JIGASI_SIP_KEEP_ALIVE_METHOD: ""

# Health-check extension
  JIGASI_HEALTH_CHECK_SIP_URI: ""

# Health-check interval
  JIGASI_HEALTH_CHECK_INTERVAL: ""
#
# Enable Jigasi transcription.
  ENABLE_TRANSCRIPTIONS: ""

# Jigasi will recordord an audio when transcriber is on. Default false.
  JIGASI_TRANSCRIBER_RECORD_AUDIO: ""

# Jigasi will send transcribed text to the chat when transcriber is on. Default false.
  JIGASI_TRANSCRIBER_SEND_TXT: ""

# Jigasi post to the chat an url with transcription file. Default false.
  JIGASI_TRANSCRIBER_ADVERTISE_URL: ""

# Enable recording
  ENABLE_RECORDING: "1"

# XMPP domain for the jibri recorder
  XMPP_RECORDER_DOMAIN: "recorder.web.jitsi.sunsingerus.com"

# XMPP recorder user for Jibri client connections.
  JIBRI_RECORDER_USER: "recorder"

# XMPP recorder password for Jibri client connections.
  JIBRI_RECORDER_PASSWORD: "passw0rd"

# Directory for recordings inside Jibri container.
  JIBRI_RECORDING_DIR: "/config/recordings"

# The finalizing script. Will run after recording is complete.
  JIBRI_FINALIZE_RECORDING_SCRIPT_PATH: ""

# Enable upload recordings to dropbox
  JIBRI_DROPBOX_APIKEY: ""

# XMPP user for Jibri client connections.
  JIBRI_XMPP_USER: "jibri"

# XMPP password for Jibri client connections.
  JIBRI_XMPP_PASSWORD: "passw0rd"

# MUC name for the Jibri pool.
  JIBRI_BREWERY_MUC: "jibribrewery"

# MUC connection timeout
  JIBRI_PENDING_TIMEOUT: "90"

# When jibri gets a request to start a service for a room, the room
# jid will look like: roomName@optional.prefixes.subdomain.xmpp_domain
# We'll build the url for the call by transforming that into:
# https://xmpp_domain/subdomain/roomName
# So if there are any prefixes in the jid (like jitsi meet, which
# has its participants join a muc at conference.xmpp_domain) then
# list that prefix here so it can be stripped out to generate
# the call url correctly.
  JIBRI_STRIP_DOMAIN_JID: "muc"

# Directory for logs inside Jibri container.
  JIBRI_LOGS_DIR: "/config/logs"

# set only if the jibri hosted on a different host
  JIBRI_EXTERNAL_INSTANCE: "1"

# Credentials for connect to Cloud Google API from Jigasi. Path located inside the container.
# Please read https://cloud.google.com/text-to-speech/docs/quickstart-protocol
# section "Before you begin" from 1 to 5 paragraph. Copy the key on
# the docker host to ~/.jitsi-meet-cfg/jigasi/key.json and to enable this setting:
  GOOGLE_APPLICATION_CREDENTIALS: ""

# Disable HTTPS. This can be useful if TLS connections are going to be handled outside of this setup.
  DISABLE_HTTPS: ""

# Redirects HTTP traffic to HTTPS. Only works with the standard HTTPS port (443).
  ENABLE_HTTP_REDIRECT: ""

