#---
###
### LoadBalancer TCP-only
###
#apiVersion: v1
#kind: Service
#metadata:
#  name: jvb-tcp
#  labels:
#    app: jvb
#  annotations:
#    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
#    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
#spec:
#  selector:
#    app: jvb
#  ports:
#  - name: "port-30443"
#    port: 30443
#    targetPort: 30443
#  type: LoadBalancer


#---
###
### LoadBalancer UDP-only
###
#apiVersion: v1
#kind: Service
#metadata:
#  name: jvb-udp
#  labels:
#    app: jvb
#  annotations:
#    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
#    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
#spec:
#  selector:
#    app: jvb
#  ports:
#  - name: "port-30000"
#    port: 30000
#    protocol: UDP
#    targetPort: 30000
#  type: LoadBalancer


#---
###
### LoadBalancer UDP + TCP
###
#apiVersion: v1
#kind: Service
#metadata:
#  name: jvb
#  labels:
#    app: jvb
#  annotations:
#    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
#    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
#spec:
#  selector:
#    app: jvb
#  ports:
#  - name: "port-30000"
#    port: 30000
#    protocol: UDP
#    targetPort: 30000
#  - name: "port-30443"
#    port: 30443
#    targetPort: 30443
#  type: LoadBalancer



---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jvb-config-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jvb
  labels:
    app: jvb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jvb
  template:
    metadata:
      labels:
        app: jvb
    spec:
      volumes:
      - name: jvb-config
        persistentVolumeClaim:
          claimName: jvb-config-pvc
#      hostAliases:
#      - ip: ""
#        hostnames:
#        - "prosody"
      containers:
      - name: jvb
        image: "sunsingerus/jvb"
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /config
          name: jvb-config
        envFrom:
          - configMapRef:
              name: jitsi-config
#        readinessProbe:
#          httpGet:
#            path: /about/health
#            port: 8080
#          initialDelaySeconds: 5
#          periodSeconds: 3
#          timeoutSeconds: 60        
#        livenessProbe:
#          httpGet:
#            path: /about/health
#            port: 8080
#          initialDelaySeconds: 10
#          periodSeconds: 3
        ports:
        - containerPort: 30000
          protocol: UDP
        - containerPort: 30443
          protocol: TCP
      restartPolicy: Always

