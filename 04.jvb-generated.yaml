---
###
### LoadBalancer TCP-only
###
#apiVersion: v1
#kind: Service
#metadata:
#  name: jvb-tcp
#  labels:
#    app: jvb
#  annotations:
#    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
#    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
#spec:
#  selector:
#    app: jvb
#  ports:
#  - name: "port-4443"
#    port: 4443
#    targetPort: 4443
#  type: LoadBalancer


#---
###
### LoadBalancer UDP-only
###
#apiVersion: v1
#kind: Service
#metadata:
#  name: jvb-udp
#  labels:
#    app: jvb
#  annotations:
#    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
#    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
#spec:
#  selector:
#    app: jvb
#  ports:
#  - name: "port-10000"
#    port: 10000
#    protocol: UDP
#    targetPort: 10000
#  type: LoadBalancer


#---
###
### LoadBalancer UDP + TCP
###
#apiVersion: v1
#kind: Service
#metadata:
#  name: jvb
#  labels:
#    app: jvb
#  annotations:
#    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
#    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
#spec:
#  selector:
#    app: jvb
#  ports:
#  - name: "port-10000"
#    port: 10000
#    protocol: UDP
#    targetPort: 10000
#  - name: "port-4443"
#    port: 4443
#    targetPort: 4443
#  type: LoadBalancer


---
###
### NodePort UDP + TCP Service
###
apiVersion: v1
kind: Service
metadata:
  name: jvb
  labels:
    app: jvb
#  annotations:
#    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
#    service.beta.kubernetes.io/aws-load-balancer-internal: "true"
spec:
  selector:
    app: jvb
  ports:
  - name: "port-10000"
    nodePort: 10000
    port: 10000
    protocol: UDP
    targetPort: 10000
  - name: "port-4443"
    nodePort: 4443
    port: 4443
    protocol: TCP
    targetPort: 4443
  type: NodePort


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jvb-config-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jvb
  labels:
    app: jvb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jvb
  template:
    metadata:
      labels:
        app: jvb
    spec:
      volumes:
      - name: jvb-config
        persistentVolumeClaim:
          claimName: jvb-config-pvc
      hostAliases:
      - ip: "100.69.9.12"
        hostnames:
        - "xmpp.meet.jitsi"
      containers:
      - name: jvb
        image: jitsi/jvb
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /config
          name: jvb-config
        envFrom:
	- configMapRef:
	    name: jitsi-config
        readinessProbe:
          httpGet:
            path: /about/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 3
          timeoutSeconds: 60        
        livenessProbe:
          httpGet:
            path: /about/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 3
        ports:
        - containerPort: 10000
          protocol: UDP
        - containerPort: 4443
      restartPolicy: Always

